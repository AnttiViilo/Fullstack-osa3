{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Person","person","del","name","number","onClick","Filter","props","value","filter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","filteredArray","map","key","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","personService","then","response","data","toLowerCase","includes","event","console","log","target","preventDefault","nameObject","Math","floor","random","length","find","p","window","confirm","setTimeout","concat","newPersons","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50b6b6bb.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\nconst remove = id => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport \"./index.css\";\n\nconst Person = ({ person, del }) => {\n  return (\n    <p>\n      {person.name} {person.number}\n      <button onClick={() => del(person.name, person.id)}>delete</button>\n    </p>\n  );\n};\n\nconst Filter = props => {\n  return (\n    <form>\n      <div>\n        filter shown with:{\" \"}\n        <input value={props.filter} onChange={props.handleFilterChange} />\n      </div>\n    </form>\n  );\n};\n\nconst PersonForm = props => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Persons = props => {\n  const rows = () =>\n    props.filteredArray.map(person => (\n      <Person key={person.name} person={person} del={props.del} />\n    ));\n\n  return <div>{rows()}</div>;\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setNewFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const filteredArray = persons.filter(value => {\n    return value.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = event => {\n    console.log(event.target.value);\n    setNewFilter(event.target.value);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      id: Math.floor(Math.random() * Math.floor(10000)) + 4\n    };\n    if (persons.filter(person => person.name === nameObject.name).length > 0) {\n      const person = persons.find(p => p.name === nameObject.name);\n      person.number = nameObject.number;\n      console.log(person);\n\n      if (\n        window.confirm(`${nameObject.name} is already added to the phonebook,\n             replace the old number with a new one?`)\n      ) {\n        personService.update(person.id, person).then(response => {\n          console.log(response);\n\n          setNewName(\"\");\n          setNewNumber(\"\");\n\n          setMessage(`Changed ${nameObject.name}`);\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 2000);\n        });\n      }\n    } else {\n      personService.create(nameObject).then(response => {\n        console.log(response);\n        setPersons(persons.concat(nameObject));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setMessage(`Added ${nameObject.name}`);\n\n        setTimeout(() => {\n          setMessage(null);\n        }, 2000);\n      });\n    }\n  };\n\n  const deletePerson = (name, id) => {\n    const newPersons = persons.filter(person => person.name !== name);\n\n    if (window.confirm(`Delete ${name} ?`)) {\n      console.log(id);\n      personService\n        .remove(id)\n        .then(response => {\n          console.log(response);\n          setPersons(newPersons);\n\n          setMessage(`Deleted ${name}`);\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 2000);\n        })\n        .catch(error => {\n          console.log(error);\n          setMessage(\n            `Information of '${name}' has already been removed from server`\n          );\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setPersons(newPersons);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h3>add a new</h3>\n\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <Persons filteredArray={filteredArray} del={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}